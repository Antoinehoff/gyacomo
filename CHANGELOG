### 4.x GYACOMO

>4.11 background ExB shear

>4.1 Miller geometry benchmarked

>4.01 Singular value decomposition is availale with LAPACK (used for DLRA experiments)

>4.0 Gyacomo is born and the code is open-source with a GNU GPLv3 license

### 3.x HeLaZ 3D (flux tube s-alpha)

>3.9 Perpendicular electromagnetic fluctuations by solving Ampere equations (benchmarked linearly)

>3.8 Benchmarked for CBC against GENE for various gradients values (see Dimits_fig3.m)

>3.7 The frequency plane has been transposed from positive kx to positive ky for easier implementation of shear. Also added 3D Z-pinch geometry

>3.6 MPI 3D parallelization in p, kx and z and benchmarked for each parallel options with gbms (new molix) for linear fluxtube shearless.

>3.5 Staggered grid for parallel odd/even coupling

>3.4 Adiabatic electrons

>3.3 Benchmarked in fluxtube s-alpha geometry linear run with molix (B.J.Frei) code and works now for shear = 0 with periodic z BC

>3.2 Stopping file procedure like in GBS is added

>3.1 Implementation of mirror force

>3.0 3D version and works as the 2D version if Nz = 1, the coordinates were renamed from (r,z)  to (x,y,z). Now the parallel direction is ez.

### 2.x 2D Zpinch MPI parallel version

>2.7 Versatile interpolation of kperp for the cosolver matrices and corrections done on DGGK

>2.6 Change of collisionality normalisation (from nu_ei to nu_ii), implementation of FCGK

>2.5 GK cosolver collision implementation

>2.4 MPI 2D cartesian parallel (along p and kr)

>2.3 GK Dougherty operator

>2.2 Allow restart with different P,J values

>2.1 First compilable parallel version (1D parallel along kr)

### 1.x Implementation of the non linear Poisson bracket term

>1.4 Quantitative study with stationary average particle flux \Gamma_\infty

>1.3 Linear analysis showed that a certain amount of PJ are recquired to trigger mode

>1.2 Zonal flows are observed in a similar way to Ricci Rogers 2006 with GS2

>1.1 Qualitative test : find similar turbulences as Hasegawa Wakatani system with few moments

>1.1 Methods in fourier_mod.f90 have been validated by tests on Hasegawa Wakatani system

>1.1 Methods in fourier_mod.f90 have been validated by tests on Hasegawa Wakatani system

>1.0 FFTW3 has been used to treat the convolution as a product and discrete fourier transform

### 0.x Write MOLI matlab solver in Fortran using Monli1D as starting point

>0.6 Benchmarks now include Dougherty, Lenard-Bernstein and Full Coulomb collision operators

>0.5 Load COSOlver matrices

>0.4 Benchmark with MOLI matlab results for Z-pinch (cf. kz_linear script)

>0.3 RK4 time solver

>0.2 implement moment hierarchy linear terms

>0.1 implement linear Poisson equation in fourier space

>0.0 go from 1D space to 2D fourier and from Hermite basis to Hermite-Laguerre basis
